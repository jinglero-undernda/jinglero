openapi: 3.0.3
info:
  title: Jinglero API
  version: 0.1.0
servers:
  - url: /api
paths:
  /public/health:
    get:
      summary: Health check
      responses:
        "200":
          description: OK
  /search:
    get:
      summary: Global search
      parameters:
        - in: query
          name: q
          schema: { type: string }
          required: true
        - in: query
          name: types
          schema: { type: string, description: comma-separated types }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 100, default: 10 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
        - in: query
          name: mode
          schema: { type: string, enum: [basic, fulltext], default: basic }
      responses:
        "200": { description: Results grouped by entity }
  /public/entities/{type}:
    get:
      summary: List entities
      parameters:
        - in: path
          name: type
          required: true
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 100, default: 50 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        "200": { description: Entity list }
  /public/entities/{type}/{id}:
    get:
      summary: Get entity by id
      parameters:
        - in: path
          name: type
          required: true
          schema: { type: string }
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        "200": { description: Entity }
  /public/entities/{type}/{id}/relationships:
    get:
      summary: Get entity relationships summary
      parameters:
        - in: path
          name: type
          required: true
          schema: { type: string }
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        "200": { description: Relationship summary }
  /public/entities/jingles/{id}/related:
    get:
      summary: Related jingles by jinglero/cancion/tematica
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
        - in: query
          name: types
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 100, default: 10 }
      responses:
        "200": { description: Related lists }
  /public/entities/canciones/{id}/related:
    get:
      summary: Related for Cancion
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 100, default: 10 }
      responses:
        "200": { description: Related lists }
  /public/entities/artistas/{id}/related:
    get:
      summary: Related for Artista
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 100, default: 10 }
      responses:
        "200": { description: Related lists }
